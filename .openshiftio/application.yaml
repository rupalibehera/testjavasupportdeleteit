apiVersion: v1
kind: Template
metadata:
  name: thorntail-health-check
parameters:
- name: SUFFIX_NAME
  description: The suffix name for the template objects
  displayName: Suffix name
  value: ''
- name: RELEASE_VERSION
  description: The release version number of application
  displayName: Release version
  value: 2.0.0
- name: SOURCE_REPOSITORY_URL
  description: The source URL for the application
  displayName: Source URL
  value: https://github.com/wildfly-swarm-openshiftio-boosters/wfswarm-health-check.git
  required: true
- name: SOURCE_REPOSITORY_REF
  description: The branch name for the application
  displayName: Source Branch
  value: master
  required: true
- name: SOURCE_REPOSITORY_DIR
  description: The location within the source repo of the application
  displayName: Source Directory
  value: .
  required: true
- name: GITHUB_WEBHOOK_SECRET
  description: A secret string used to configure the GitHub webhook.
  displayName: GitHub Webhook Secret
  required: true
  from: '[a-zA-Z0-9]{40}'
  generate: expression
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: thorntail-health-check${SUFFIX_NAME}
    labels:
      version: ${RELEASE_VERSION}
  spec: {}
# - apiVersion: v1
#   kind: ImageStream
#   metadata:
#     name: runtime-thorntail-health-check${SUFFIX_NAME}
#   spec:
#     tags:
#     - name: latest
#       from:
#         kind: DockerImage
#         name: registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: thorntail-health-check-s2i${SUFFIX_NAME}
    labels:
    version: ${RELEASE_VERSION}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'thorntail-health-check${SUFFIX_NAME}:${RELEASE_VERSION}'
    postCommit: {}
    resources: {}
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      #contextDir: ${SOURCE_REPOSITORY_DIR}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 'registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift'
        incremental: true
        env:
        - name: MAVEN_ARGS_APPEND
          value: "-pl ${SOURCE_REPOSITORY_DIR}"
        - name: ARTIFACT_DIR
          value: "${SOURCE_REPOSITORY_DIR}/target"
      type: Source
    triggers:
    - github:
        secret: '${GITHUB_WEBHOOK_SECRET}'
      type: GitHub
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      expose: "true"
      app: thorntail-health-check
      group: io.openshift.boosters
      version: ${RELEASE_VERSION}
    name: thorntail-health-check${SUFFIX_NAME}
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: thorntail-health-check
      group: io.openshift.boosters

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: thorntail-health-check
      group: io.openshift.boosters
      version: ${RELEASE_VERSION}
    name: thorntail-health-check${SUFFIX_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: thorntail-health-check
      group: io.openshift.boosters
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: thorntail-health-check
          group: io.openshift.boosters
        name: thorntail-health-check${SUFFIX_NAME}
      spec:
        containers:
        - name: thorntail-health-check${SUFFIX_NAME}
          image: ""
          env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          securityContext:
            privileged: false
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
        automatic: true
        containerNames:
            - thorntail-health-check${SUFFIX_NAME}
        from:
            kind: ImageStreamTag
            name: 'thorntail-health-check${SUFFIX_NAME}:${RELEASE_VERSION}'
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: thorntail-health-check
      group: io.openshift.boosters
      version: ${RELEASE_VERSION}
    name: thorntail-health-check${SUFFIX_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: thorntail-health-check${SUFFIX_NAME}
